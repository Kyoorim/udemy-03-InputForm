{"ast":null,"code":"var _jsxFileName = \"/Users/kyoorim/Desktop/practice-coding/udemy-03-InputForm/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Wrapper from \"../Helpers/Wrapper\";\nimport classes from \"./AddUser.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  //every keystroke 마다 새로고침되는 것을 막기 위한 useRef. name, age의 Input에 각각 연결해준다\n  const nameInputRef = useRef();\n  const ageInputRef = useRef(); // useRef를 씀으로써 삭제할 수 있게 됨!\n  //   const [enteredUsername, setEnteredUsername] = useState(\"\");\n  //   const [enteredAge, setEnteredAge] = useState(\"\");\n\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault(); // console.log(nameInputRef.current.value); // 이름칸에 Max를 입력하면 Max가 저장되서 출력됨 => 다시 말하면 useState를 대체할 수 있다는 말!!\n\n    const enteredName = nameInputRef.current.value;\n    const enteredUserAge = ageInputRef.current.value; //유효성 검사\n\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values).\"\n      });\n      return;\n    }\n\n    if (+enteredUserAge < 1) {\n      setError({\n        title: \"Invalid age\",\n        message: \"Please enter a valid age (> 0).\"\n      });\n      return;\n    } //App.js의 addUserHandler 호출하여 (submit하면) 입력된 이름과 나이 인자 보내주기\n\n\n    props.onAddUser(enteredName, enteredUserAge); // console.log(enteredUsername, enteredAge);\n    // setEnteredUsername(\"\");\n    // setEnteredAge(\"\");\n  };\n\n  const usernameChangeHandler = event => {\n    setEnteredUsername(event.target.value);\n  };\n\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n\n  const errorHandler = () => {\n    // null로 해버리면 error 값이 없어지므로 error 조건문이 작동하지 않아 모달창을 없앨 수 있다\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          onChange: usernameChangeHandler,\n          value: enteredUsername,\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          onChange: ageChangeHandler,\n          value: enteredAge,\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"oeh9P4do1L6ON2Ex+93ODUUduFk=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["useState","useRef","Card","Button","ErrorModal","Wrapper","classes","AddUser","props","nameInputRef","ageInputRef","error","setError","addUserHandler","event","preventDefault","enteredName","current","value","enteredUserAge","trim","length","title","message","onAddUser","usernameChangeHandler","setEnteredUsername","target","ageChangeHandler","setEnteredAge","errorHandler","input","enteredUsername","enteredAge"],"sources":["/Users/kyoorim/Desktop/practice-coding/udemy-03-InputForm/src/components/Users/AddUser.js"],"sourcesContent":["import { useState, useRef } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Wrapper from \"../Helpers/Wrapper\";\nimport classes from \"./AddUser.module.css\";\n\nconst AddUser = (props) => {\n  //every keystroke 마다 새로고침되는 것을 막기 위한 useRef. name, age의 Input에 각각 연결해준다\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n\n  // useRef를 씀으로써 삭제할 수 있게 됨!\n  //   const [enteredUsername, setEnteredUsername] = useState(\"\");\n  //   const [enteredAge, setEnteredAge] = useState(\"\");\n  const [error, setError] = useState();\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    // console.log(nameInputRef.current.value); // 이름칸에 Max를 입력하면 Max가 저장되서 출력됨 => 다시 말하면 useState를 대체할 수 있다는 말!!\n    const enteredName = nameInputRef.current.value;\n    const enteredUserAge = ageInputRef.current.value;\n    //유효성 검사\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values).\",\n      });\n      return;\n    }\n    if (+enteredUserAge < 1) {\n      setError({\n        title: \"Invalid age\",\n        message: \"Please enter a valid age (> 0).\",\n      });\n      return;\n    }\n    //App.js의 addUserHandler 호출하여 (submit하면) 입력된 이름과 나이 인자 보내주기\n    props.onAddUser(enteredName, enteredUserAge);\n    // console.log(enteredUsername, enteredAge);\n    // setEnteredUsername(\"\");\n    // setEnteredAge(\"\");\n  };\n\n  const usernameChangeHandler = (event) => {\n    setEnteredUsername(event.target.value);\n  };\n\n  const ageChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n  };\n\n  const errorHandler = () => {\n    // null로 해버리면 error 값이 없어지므로 error 조건문이 작동하지 않아 모달창을 없앨 수 있다\n    setError(null);\n  };\n\n  return (\n    <Wrapper>\n      {/*<Card>컴포넌트에서 className을 통해 props처럼 Card에 보내주고 있음*/}\n      {/* input 값에 value={enteredUsername} || {enteredAge}를 써줘야 addUserHandler에서 set함수로 초기화하는 작업이 실행될 수 있음*/}\n      {error && (\n        <ErrorModal\n          title={error.title}\n          message={error.message}\n          onConfirm={errorHandler}\n        />\n      )}\n      <Card className={classes.input}>\n        <form onSubmit={addUserHandler}>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            onChange={usernameChangeHandler}\n            value={enteredUsername}\n            ref={nameInputRef}\n          ></input>\n          <label htmlFor=\"age\">Age (Years)</label>\n          <input\n            id=\"age\"\n            type=\"number\"\n            onChange={ageChangeHandler}\n            value={enteredAge}\n            ref={ageInputRef}\n          ></input>\n          <Button type=\"submit\">Add User</Button>\n        </form>\n      </Card>\n    </Wrapper>\n  );\n};\n\nexport default AddUser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}